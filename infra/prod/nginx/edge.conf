# Resolve Docker service names from within the container
resolver 127.0.0.11 valid=30s ipv6=off;

# =========================
# HTTP: ACME + health + redirect
# =========================
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name nazariitsubera.com www.nazariitsubera.com;

  # Healthcheck (avoid redirect so it returns 200)
  location = /health {
    return 200 'ok';
    add_header Content-Type text/plain;
  }

  # ACME HTTP-01 challenge (shared volume with certbot)
  location ^~ /.well-known/acme-challenge/ {
    alias /var/www/certbot/.well-known/acme-challenge/;
    try_files $uri =404;
  }

  # Everything else â†’ HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# =========================
# HTTPS: site / reverse proxy
# =========================
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name nazariitsubera.com www.nazariitsubera.com;

  # Certificates (issued by certbot into this shared path)
  ssl_certificate     /etc/letsencrypt/live/nazariitsubera.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/nazariitsubera.com/privkey.pem;

  # TLS baseline
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_session_cache shared:SSL:10m;
  # (Enable HSTS after HTTPS is confirmed working)
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Common proxy headers
  proxy_http_version 1.1;
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;

  # WebSockets/SSE (simple, no `map`)
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  # Sensible timeouts
  proxy_connect_timeout 5s;
  proxy_send_timeout   120s;
  proxy_read_timeout   120s;

  # --- Routes ---
  # Backend API
  location ^~ /api/ {
    proxy_pass http://backend:8080;
  }

  # Admin (same backend)
  location ^~ /admin/ {
    proxy_pass http://backend:8080;
  }

  # Frontend app
  location / {
    proxy_pass http://frontend:3000;
  }
}

