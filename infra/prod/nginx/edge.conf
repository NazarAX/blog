# HTTP: ACME challenge + redirect to HTTPS
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name example.com www.example.com;

  client_max_body_size 25m;
  sendfile on;

  # ACME webroot
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # everything else -> HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS: real site
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name example.com www.example.com;

  ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

  # TLS defaults
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_session_cache shared:SSL:10m;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Shared proxy headers
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # WebSocket/SSE
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  # Routes
  location ^~ /api/   { proxy_pass http://backend:8080;  proxy_read_timeout 120s; }
  location ^~ /admin/ { proxy_pass http://backend:8080;  proxy_read_timeout 120s; }
  location /          { proxy_pass http://frontend:3000; proxy_read_timeout 120s; }
}
